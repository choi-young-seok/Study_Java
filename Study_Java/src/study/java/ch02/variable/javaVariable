# Java Variable : 변수
	- 프로그램은 작업을 처리 하는 과정에서 필요에 따라 데이터를 메모리에 저장하는 과정을 반복
	- 데이터를 메모리에 저장 하는 공간을 변수라 한다.
	정리 : 단 하나의 값을 저장할 수 있는 메모리 공간

# Java 변수의 종류
 	- 기본 데이터 타입과 사용자 정의 데이터 타입으로 분류
 		- 기본 데이터 타입
 			- 정수형 : byte, char, short, int, long
 			- 실수형 : float, double
 			- 논리형 : boolean
 			
# Java 기본 데이터 타입
	- 정수형
		  타입		byte	/	bit
		  byte		1		/	8
		  char		2		/	16
		  short		2		/	16
		  int		4		/	32
		  long		8		/	64
	- 실수형
		  타입		byte	/	bit
		  float		4		/	32
		  double	8		/	64
	- 논리
		  타입		byte	/	bit
		  boolean	1		/	8				  
 			
# Java 변수의 작성 규칙
	- 변수의 첫 글자는 [문자 / $ / _ ]로만 시작할 수 있으며, 숫자로 시작할 수 없다
		- EX1) 가능 : userName, $userName, _userName
		  EX2) 불가능 : 1userName, @userName, $userName
	
	- 영어 대소문자는 구분된다.
		- EX) username과 userName은 다른 변수
	
	- 첫문자는 영어 소문자로 시작하되, 다른 단어가 붙을 경우 첫 문자를 대문자로 표기(Camel표기법)
		- EX) 사용자이름을 의미하는 변수명을 지정할 시 user와 name을 결합하면 Camel표기법에 의해 userName으로 표기하는 것이 관례
	
	- 변수의 길이에는 제한이 없다.
		
	- Java에서 지정한 예약어는 변수명으로 사용할 수 없다.
	
 			
# Java 예약어 : Java에서 이미 사용하는 키워드로 변수명을 지정할 수 없는 단어
	- 기본 데이터 타입 : boolean, byte, char, short, int long, float, double
	- 접근 지정자      : private, public, protected
	- 클래스 관련      : class, abstract, interface, extends, implements, enum
	- 객체 관련        : new, instanceof, this, super, null
	- 메소드 관련      : void, return
	- 제어문 관련      : if, else, switch, case, default, for, do, while, break, continue
	- 논리값 관련      : true, false
	- 예외처리 관련    : try, catch, finally, throw, throws
	- 기타             : transient, volatile, package, import, synchronized, native, final, static, strictfp, assert
	
# 변수 리터럴(literal)
	- 리터럴 : 소스코드 내에서 개발자에 의해 직접 입력된 값
	
	- 정수 리터럴		
	- 실수 리터럴
	- 문자 리터럴
	- 문자열 리터럴
	- 논리 리터럴
	
# Java escape
	- '\t' : 수평 탭
	- '\n' : 줄 바꿈
	- '\r' : 리턴
	- '\"' : " (큰 따옴표)
	- '\'' : ' (작은 따옴표)
	- '\\' : \ (역 슬래쉬)


	
		